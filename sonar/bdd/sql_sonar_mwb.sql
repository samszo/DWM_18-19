-- MySQL Script generated by MySQL Workbench
-- Thu Mar 14 10:25:36 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sonar
-- -----------------------------------------------------
-- Base de données pour l'application SONAR

-- -----------------------------------------------------
-- Schema sonar
--
-- Base de données pour l'application SONAR
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sonar` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `sonar` ;

-- -----------------------------------------------------
-- Table `sonar`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sonar`.`user` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `pseudo` VARCHAR(45) NULL,
  `mail` VARCHAR(45) NULL,
  PRIMARY KEY (`id_user`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sonar`.`archive`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sonar`.`archive` (
  `id_archive` INT NOT NULL AUTO_INCREMENT,
  `titre` VARCHAR(70) NULL,
  `date` DATETIME NULL,
  `auteur` VARCHAR(45) NULL,
  `format` VARCHAR(45) NULL,
  `url` VARCHAR(100) NULL,
  `id_fragment` INT NOT NULL,
  PRIMARY KEY (`id_archive`, `id_fragment`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sonar`.`annotation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sonar`.`annotation` (
  `id_annotation` INT NOT NULL AUTO_INCREMENT,
  `texte_annotation` MEDIUMTEXT NULL,
  `id_user` INT NOT NULL,
  PRIMARY KEY (`id_annotation`, `id_user`),
  INDEX `fk_annotation_user1_idx` (`id_user` ASC) ,
  CONSTRAINT `fk_annotation_user1`
    FOREIGN KEY (`id_user`)
    REFERENCES `sonar`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sonar`.`fragment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sonar`.`fragment` (
  `id_fragment` INT NOT NULL AUTO_INCREMENT,
  `fragment` VARCHAR(45) NULL,
  `pertinence` INT NULL,
  `date` DATETIME NULL,
  `id_archive` INT NOT NULL,
  PRIMARY KEY (`id_fragment`, `id_archive`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sonar`.`commentaire`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sonar`.`commentaire` (
  `id_commentaire` INT NOT NULL AUTO_INCREMENT,
  `pertinence` INT NULL,
  `date` DATETIME NULL,
  `id_archive` INT NOT NULL,
  `id_fragment` INT NOT NULL,
  PRIMARY KEY (`id_commentaire`, `id_archive`, `id_fragment`),
  INDEX `fk_commentaire_archive1_idx` (`id_archive` ASC, `id_fragment` ASC) ,
  INDEX `fk_commentaire_fragment1_idx` (`id_fragment` ASC, `id_archive` ASC) ,
  CONSTRAINT `fk_commentaire_archive1`
    FOREIGN KEY (`id_archive` , `id_fragment`)
    REFERENCES `sonar`.`archive` (`id_archive` , `id_fragment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_commentaire_fragment1`
    FOREIGN KEY (`id_fragment` , `id_archive`)
    REFERENCES `sonar`.`fragment` (`id_fragment` , `id_archive`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sonar`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sonar`.`tag` (
  `id_tag` INT NOT NULL AUTO_INCREMENT,
  `tag` VARCHAR(45) NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id_tag`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sonar`.`archivextag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sonar`.`archivextag` (
  `archive_id_archive` INT NOT NULL,
  `archive_id_fragment` INT NOT NULL,
  `tag_id_tag` INT NOT NULL,
  PRIMARY KEY (`archive_id_archive`, `archive_id_fragment`, `tag_id_tag`),
  INDEX `fk_archive_has_tag_tag1_idx` (`tag_id_tag` ASC) ,
  INDEX `fk_archive_has_tag_archive1_idx` (`archive_id_archive` ASC, `archive_id_fragment` ASC) ,
  CONSTRAINT `fk_archive_has_tag_archive1`
    FOREIGN KEY (`archive_id_archive` , `archive_id_fragment`)
    REFERENCES `sonar`.`archive` (`id_archive` , `id_fragment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_archive_has_tag_tag1`
    FOREIGN KEY (`tag_id_tag`)
    REFERENCES `sonar`.`tag` (`id_tag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sonar`.`archivexuser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sonar`.`archivexuser` (
  `archive_id_archive` INT NOT NULL,
  `archive_id_fragment` INT NOT NULL,
  `user_id_user` INT NOT NULL,
  PRIMARY KEY (`archive_id_archive`, `archive_id_fragment`, `user_id_user`),
  INDEX `fk_archive_has_user_user1_idx` (`user_id_user` ASC) ,
  INDEX `fk_archive_has_user_archive1_idx` (`archive_id_archive` ASC, `archive_id_fragment` ASC) ,
  CONSTRAINT `fk_archive_has_user_archive1`
    FOREIGN KEY (`archive_id_archive` , `archive_id_fragment`)
    REFERENCES `sonar`.`archive` (`id_archive` , `id_fragment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_archive_has_user_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `sonar`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
